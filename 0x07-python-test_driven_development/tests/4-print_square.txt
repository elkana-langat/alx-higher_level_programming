============================
How to Use 4-print_square.py
============================

The module defines a function ``print_square(size)``.
``print_square(...)``` print a square of size ``size`` with,
the character '#'

Usage
=====

The function takes an integer

::

	>>> print_square = __import__('4-print_square').print_square
	>>> print_square(4)
	####
	####
	####
	####

::

	>>> print_square(1)
	#

::

	>>> print_square(0)
	
Invalid input
=============

Raises an error when a float is passed

::

	>>> print_square(2.5)
	Traceback (most recent call last):
	TypeError: size must be an integer

::

	>>> print_square(-4.5)
	Traceback (most recent call last):
	TypeError: size must be an integer

::

	>>> print_square(-3)
	Traceback (most recent call last):
	ValueError: size must be >= 0

When None is passed

::

	>>> print_square(None)
	Traceback (most recent call last):
	TypeError: size must be an integer

::

	>>> print_square(float('nan'))
	Traceback (most recent call last):
	TypeError: size must be an integer

::
	
	>>> print_square()
	Traceback (most recent call last):
	TypeError: print_square() missing 1 required positional argument: 'size'
